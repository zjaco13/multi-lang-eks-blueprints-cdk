// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: cluster_provider.proto

package codegen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddClusterProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName     string           `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	ClusterProvider *ClusterProvider `protobuf:"bytes,2,opt,name=cluster_provider,json=clusterProvider,proto3" json:"cluster_provider,omitempty"`
}

func (x *AddClusterProviderRequest) Reset() {
	*x = AddClusterProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClusterProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterProviderRequest) ProtoMessage() {}

func (x *AddClusterProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterProviderRequest.ProtoReflect.Descriptor instead.
func (*AddClusterProviderRequest) Descriptor() ([]byte, []int) {
	return file_cluster_provider_proto_rawDescGZIP(), []int{0}
}

func (x *AddClusterProviderRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *AddClusterProviderRequest) GetClusterProvider() *ClusterProvider {
	if x != nil {
		return x.ClusterProvider
	}
	return nil
}

type ClusterProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClusterProvider:
	//
	//	*ClusterProvider_AsgClusterProvider
	//	*ClusterProvider_MngClusterProvider
	ClusterProvider isClusterProvider_ClusterProvider `protobuf_oneof:"cluster_provider"`
}

func (x *ClusterProvider) Reset() {
	*x = ClusterProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterProvider) ProtoMessage() {}

func (x *ClusterProvider) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterProvider.ProtoReflect.Descriptor instead.
func (*ClusterProvider) Descriptor() ([]byte, []int) {
	return file_cluster_provider_proto_rawDescGZIP(), []int{1}
}

func (m *ClusterProvider) GetClusterProvider() isClusterProvider_ClusterProvider {
	if m != nil {
		return m.ClusterProvider
	}
	return nil
}

func (x *ClusterProvider) GetAsgClusterProvider() *AsgClusterProvider {
	if x, ok := x.GetClusterProvider().(*ClusterProvider_AsgClusterProvider); ok {
		return x.AsgClusterProvider
	}
	return nil
}

func (x *ClusterProvider) GetMngClusterProvider() *MngClusterProvider {
	if x, ok := x.GetClusterProvider().(*ClusterProvider_MngClusterProvider); ok {
		return x.MngClusterProvider
	}
	return nil
}

type isClusterProvider_ClusterProvider interface {
	isClusterProvider_ClusterProvider()
}

type ClusterProvider_AsgClusterProvider struct {
	AsgClusterProvider *AsgClusterProvider `protobuf:"bytes,1,opt,name=asg_cluster_provider,json=asgClusterProvider,proto3,oneof"`
}

type ClusterProvider_MngClusterProvider struct {
	MngClusterProvider *MngClusterProvider `protobuf:"bytes,2,opt,name=mng_cluster_provider,json=mngClusterProvider,proto3,oneof"`
}

func (*ClusterProvider_AsgClusterProvider) isClusterProvider_ClusterProvider() {}

func (*ClusterProvider_MngClusterProvider) isClusterProvider_ClusterProvider() {}

type AddAsgClusterProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName        string              `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	AsgClusterProvider *AsgClusterProvider `protobuf:"bytes,2,opt,name=asg_cluster_provider,json=asgClusterProvider,proto3" json:"asg_cluster_provider,omitempty"`
}

func (x *AddAsgClusterProviderRequest) Reset() {
	*x = AddAsgClusterProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAsgClusterProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAsgClusterProviderRequest) ProtoMessage() {}

func (x *AddAsgClusterProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAsgClusterProviderRequest.ProtoReflect.Descriptor instead.
func (*AddAsgClusterProviderRequest) Descriptor() ([]byte, []int) {
	return file_cluster_provider_proto_rawDescGZIP(), []int{2}
}

func (x *AddAsgClusterProviderRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *AddAsgClusterProviderRequest) GetAsgClusterProvider() *AsgClusterProvider {
	if x != nil {
		return x.AsgClusterProvider
	}
	return nil
}

type AsgClusterProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Version string  `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Id      string  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AsgClusterProvider) Reset() {
	*x = AsgClusterProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsgClusterProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsgClusterProvider) ProtoMessage() {}

func (x *AsgClusterProvider) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsgClusterProvider.ProtoReflect.Descriptor instead.
func (*AsgClusterProvider) Descriptor() ([]byte, []int) {
	return file_cluster_provider_proto_rawDescGZIP(), []int{3}
}

func (x *AsgClusterProvider) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AsgClusterProvider) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AsgClusterProvider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddMngClusterProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName        string              `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	MngClusterProvider *MngClusterProvider `protobuf:"bytes,2,opt,name=mng_cluster_provider,json=mngClusterProvider,proto3" json:"mng_cluster_provider,omitempty"`
}

func (x *AddMngClusterProviderRequest) Reset() {
	*x = AddMngClusterProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMngClusterProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMngClusterProviderRequest) ProtoMessage() {}

func (x *AddMngClusterProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMngClusterProviderRequest.ProtoReflect.Descriptor instead.
func (*AddMngClusterProviderRequest) Descriptor() ([]byte, []int) {
	return file_cluster_provider_proto_rawDescGZIP(), []int{4}
}

func (x *AddMngClusterProviderRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *AddMngClusterProviderRequest) GetMngClusterProvider() *MngClusterProvider {
	if x != nil {
		return x.MngClusterProvider
	}
	return nil
}

type MngClusterProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Version string  `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MngClusterProvider) Reset() {
	*x = MngClusterProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MngClusterProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MngClusterProvider) ProtoMessage() {}

func (x *MngClusterProvider) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MngClusterProvider.ProtoReflect.Descriptor instead.
func (*MngClusterProvider) Descriptor() ([]byte, []int) {
	return file_cluster_provider_proto_rawDescGZIP(), []int{5}
}

func (x *MngClusterProvider) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MngClusterProvider) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_cluster_provider_proto protoreflect.FileDescriptor

var file_cluster_provider_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65,
	0x6e, 0x22, 0x83, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x14, 0x61,
	0x73, 0x67, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x67, 0x65, 0x6e, 0x2e, 0x41, 0x73, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x12, 0x61, 0x73, 0x67, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x14,
	0x6d, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x67, 0x65, 0x6e, 0x2e, 0x4d, 0x6e, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x6e, 0x67, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x12, 0x0a,
	0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x22, 0x90, 0x01, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x41, 0x73, 0x67, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x14, 0x61, 0x73, 0x67, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2e, 0x41, 0x73,
	0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x12, 0x61, 0x73, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x12, 0x41, 0x73, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x4d, 0x6e,
	0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x14, 0x6d, 0x6e,
	0x67, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x67,
	0x65, 0x6e, 0x2e, 0x4d, 0x6e, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x12, 0x6d, 0x6e, 0x67, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x12, 0x4d, 0x6e, 0x67,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x6a, 0x61, 0x63, 0x6f, 0x31,
	0x33, 0x2f, 0x73, 0x64, 0x6b, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x6f,
	0x64, 0x65, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cluster_provider_proto_rawDescOnce sync.Once
	file_cluster_provider_proto_rawDescData = file_cluster_provider_proto_rawDesc
)

func file_cluster_provider_proto_rawDescGZIP() []byte {
	file_cluster_provider_proto_rawDescOnce.Do(func() {
		file_cluster_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_cluster_provider_proto_rawDescData)
	})
	return file_cluster_provider_proto_rawDescData
}

var file_cluster_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cluster_provider_proto_goTypes = []interface{}{
	(*AddClusterProviderRequest)(nil),    // 0: codegen.AddClusterProviderRequest
	(*ClusterProvider)(nil),              // 1: codegen.ClusterProvider
	(*AddAsgClusterProviderRequest)(nil), // 2: codegen.AddAsgClusterProviderRequest
	(*AsgClusterProvider)(nil),           // 3: codegen.AsgClusterProvider
	(*AddMngClusterProviderRequest)(nil), // 4: codegen.AddMngClusterProviderRequest
	(*MngClusterProvider)(nil),           // 5: codegen.MngClusterProvider
}
var file_cluster_provider_proto_depIdxs = []int32{
	1, // 0: codegen.AddClusterProviderRequest.cluster_provider:type_name -> codegen.ClusterProvider
	3, // 1: codegen.ClusterProvider.asg_cluster_provider:type_name -> codegen.AsgClusterProvider
	5, // 2: codegen.ClusterProvider.mng_cluster_provider:type_name -> codegen.MngClusterProvider
	3, // 3: codegen.AddAsgClusterProviderRequest.asg_cluster_provider:type_name -> codegen.AsgClusterProvider
	5, // 4: codegen.AddMngClusterProviderRequest.mng_cluster_provider:type_name -> codegen.MngClusterProvider
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_cluster_provider_proto_init() }
func file_cluster_provider_proto_init() {
	if File_cluster_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cluster_provider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClusterProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_provider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_provider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAsgClusterProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_provider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsgClusterProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_provider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMngClusterProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_provider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MngClusterProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cluster_provider_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ClusterProvider_AsgClusterProvider)(nil),
		(*ClusterProvider_MngClusterProvider)(nil),
	}
	file_cluster_provider_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_cluster_provider_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cluster_provider_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cluster_provider_proto_goTypes,
		DependencyIndexes: file_cluster_provider_proto_depIdxs,
		MessageInfos:      file_cluster_provider_proto_msgTypes,
	}.Build()
	File_cluster_provider_proto = out.File
	file_cluster_provider_proto_rawDesc = nil
	file_cluster_provider_proto_goTypes = nil
	file_cluster_provider_proto_depIdxs = nil
}
